---
# Source: amd-llm-init/templates/rbac/serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gaudi-pattern-sa
  namespace: 
  annotations:
    argocd.argoproj.io/hook: "PreSync"
    argocd.argoproj.io/sync-wave: "-10"
---
# Source: amd-llm-init/templates/init-istio-ca-secret-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: create-rhoai-istio-rootca-cert-secret
  namespace: gaudi-llm
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
data:
  create-rhoai-istio-rootca-cert-secret.sh: |
    #!/bin/bash
    EXISTS=$(oc get secret --ignore-not-found rhoai-ca-bundle)

    if [[ -z "${EXISTS}" ]]; then    
      oc create secret generic -n gaudi-llm rhoai-ca-bundle --from-literal=tls.crt="$(oc extract secret/knative-serving-cert -n istio-system --to=- --keys=tls.crt)"
    else
      echo "oc get secret --ignore-not-found rhoai-ca-bundle returned non-empty string, not creating a secret"
    fi
---
# Source: amd-llm-init/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gaudi-pattern-rhoai-role
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-15"
rules:
  - apiGroups:
      - ""
      - "apps"
      - "batch"
      - "machineconfiguration.openshift.io"
      - "rbac.authorization.k8s.io"
      - "security.openshift.io"
      - "datasciencecluster.opendatahub.io"
      - "operator.knative.dev"
      - "build.openshift.io"
    resources:
      - namespaces
      - secrets
      - datascienceclusters
      - clusterrolebindings
      - knativeservings
      - jobs
      - buildconfigs
      - builds
      - buildconfigs/instantiate
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - use
      - watch
---
# Source: amd-llm-init/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gaudi-pattern-rhoai-role-mcp-label
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-15"
rules:
  - apiGroups:
      - "machineconfiguration.openshift.io"
    resources:
      - machineconfigpools
      - machineconfigs
    verbs:
      - get
      - list
      - patch
      - watch
---
# Source: amd-llm-init/templates/rbac/crb-rhoai.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-100"
  name: kubeadmin-rhoai-cluster-admin-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: User
  apiGroup: rbac.authorization.k8s.io
  name: 'kube:admin'
---
# Source: amd-llm-init/templates/rbac/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gaudi-pattern-rhoai-rolebind
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-15"
subjects:
- kind: ServiceAccount
  name: gaudi-pattern-sa
  namespace: gaudi-llm
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: gaudi-pattern-rhoai-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: amd-llm-init/templates/rbac/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gaudi-pattern-rhoai-role-mcp-label
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-15"
subjects:
- kind: ServiceAccount
  name: gaudi-pattern-sa
  namespace: gaudi-llm
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: gaudi-pattern-rhoai-role-mcp-label
  apiGroup: rbac.authorization.k8s.io
---
# Source: amd-llm-init/templates/init-istio-ca-secret-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/sync-wave: "10"
  name: create-rhoai-istio-rootca-cert-secret
  namespace: gaudi-llm
spec:
  template:
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
        command:
        - /bin/bash
        - -c
        - |
          oc wait --for=condition=ReconcileComplete=True dsc/rhods-datasciencecluster --timeout=-1s
          oc wait --for condition=Ready=True knativeserving -n knative-serving knative-serving --timeout=-1s
          '/tmp/create-rhoai-istio-rootca-cert-secret.sh'
        name: create-rhoai-istio-rootca-cert-secret
        volumeMounts:
          - mountPath: /tmp/create-rhoai-istio-rootca-cert-secret.sh
            name: create-rhoai-istio-rootca-cert-secret
            subPath: create-rhoai-istio-rootca-cert-secret.sh
      volumes:
        - name: create-rhoai-istio-rootca-cert-secret
          configMap:
            name: create-rhoai-istio-rootca-cert-secret
            defaultMode: 0755
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: gaudi-pattern-sa
      serviceAccountName: gaudi-pattern-sa
      terminationGracePeriodSeconds: 400
---
# Source: amd-llm-init/templates/external-secret-hftoken.yaml
apiVersion: "external-secrets.io/v1beta1"
kind: ExternalSecret
metadata:
  name: huggingface-token-external-secret
  namespace: gaudi-llm
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: hf-token-secret
    template:
      type: Opaque
  data:
  - secretKey: huggingface
    remoteRef:
      key: secret/global/huggingface
      property: secret
